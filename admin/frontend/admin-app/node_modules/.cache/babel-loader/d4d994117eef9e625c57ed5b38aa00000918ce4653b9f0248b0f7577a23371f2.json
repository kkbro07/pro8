{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalth\\\\Documents\\\\Cricket Tournament Player Auction Management\\\\admin\\\\frontend\\\\admin-app\\\\src\\\\pages\\\\BidderDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Paper, Typography, List, ListItem, ListItemText, ListItemAvatar, Avatar, Chip, Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@mui/material';\nimport { People, Group, Event, AttachMoney } from '@mui/icons-material';\nimport PageLayout from '../components/PageLayout';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BidderDashboard = () => {\n  _s();\n  const [auctionRounds, setAuctionRounds] = useState([]);\n  const [newBidAmount, setNewBidAmount] = useState('');\n  const [selectedAuctionRound, setSelectedAuctionRound] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchAuctionRounds();\n  }, []);\n  const fetchAuctionRounds = async () => {\n    try {\n      const response = await api.get('/bidders/auctions');\n      setAuctionRounds(response.data);\n    } catch (error) {\n      console.error('Error fetching auction rounds:', error);\n      setError('Error fetching auction rounds');\n    }\n  };\n  const handleBidSubmit = async () => {\n    try {\n      await api.post('/bidders/place-bid', {\n        auctionRoundId: selectedAuctionRound,\n        bidAmount: newBidAmount\n      });\n      setNewBidAmount('');\n      setSelectedAuctionRound(null);\n      fetchAuctionRounds();\n    } catch (error) {\n      console.error('Error placing bid:', error);\n      setError('Error placing bid');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PageLayout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"Auction Rounds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: auctionRounds.map(round => /*#__PURE__*/_jsxDEV(ListItem, {\n              divider: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `Auction Round ${round._id}`,\n                secondary: `Current Bid: ${round.currentBid}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), round.status === 'open' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Bid Amount\",\n                  type: \"number\",\n                  value: newBidAmount,\n                  onChange: e => setNewBidAmount(e.target.value),\n                  InputProps: {\n                    inputProps: {\n                      min: round.currentBid + 1\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: () => {\n                    setSelectedAuctionRound(round._id);\n                    handleBidSubmit();\n                  },\n                  children: \"Place Bid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, round._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(BidderDashboard, \"+Ot5a4yxdMBXj3FQZWUSk3bfPhg=\");\n_c = BidderDashboard;\nexport default BidderDashboard;\nvar _c;\n$RefreshReg$(_c, \"BidderDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Paper","Typography","List","ListItem","ListItemText","ListItemAvatar","Avatar","Chip","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","People","Group","Event","AttachMoney","PageLayout","api","jsxDEV","_jsxDEV","Fragment","_Fragment","BidderDashboard","_s","auctionRounds","setAuctionRounds","newBidAmount","setNewBidAmount","selectedAuctionRound","setSelectedAuctionRound","error","setError","fetchAuctionRounds","response","get","data","console","handleBidSubmit","post","auctionRoundId","bidAmount","children","sx","flexGrow","p","container","spacing","item","xs","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","map","round","divider","primary","_id","secondary","currentBid","status","label","type","value","onChange","e","target","InputProps","inputProps","min","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kalth/Documents/Cricket Tournament Player Auction Management/admin/frontend/admin-app/src/pages/BidderDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Grid, Paper, Typography, List, ListItem, ListItemText, ListItemAvatar, Avatar, Chip, Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@mui/material';\r\nimport { People, Group, Event, AttachMoney } from '@mui/icons-material';\r\nimport PageLayout from '../components/PageLayout';\r\nimport api from '../utils/api';\r\n\r\nconst BidderDashboard = () => {\r\n  const [auctionRounds, setAuctionRounds] = useState([]);\r\n  const [newBidAmount, setNewBidAmount] = useState('');\r\n  const [selectedAuctionRound, setSelectedAuctionRound] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchAuctionRounds();\r\n  }, []);\r\n\r\n  const fetchAuctionRounds = async () => {\r\n    try {\r\n      const response = await api.get('/bidders/auctions');\r\n      setAuctionRounds(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching auction rounds:', error);\r\n      setError('Error fetching auction rounds');\r\n    }\r\n  };\r\n\r\n  const handleBidSubmit = async () => {\r\n    try {\r\n      await api.post('/bidders/place-bid', {\r\n        auctionRoundId: selectedAuctionRound,\r\n        bidAmount: newBidAmount,\r\n      });\r\n      setNewBidAmount('');\r\n      setSelectedAuctionRound(null);\r\n      fetchAuctionRounds();\r\n    } catch (error) {\r\n      console.error('Error placing bid:', error);\r\n      setError('Error placing bid');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout>\r\n      <Box sx={{ flexGrow: 1, p: 3 }}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              Auction Rounds\r\n            </Typography>\r\n            {error && <Typography color=\"error\">{error}</Typography>}\r\n            <List>\r\n              {auctionRounds.map((round) => (\r\n                <ListItem key={round._id} divider>\r\n                  <ListItemText\r\n                    primary={`Auction Round ${round._id}`}\r\n                    secondary={`Current Bid: ${round.currentBid}`}\r\n                  />\r\n                  {round.status === 'open' && (\r\n                    <>\r\n                      <TextField\r\n                        label=\"Bid Amount\"\r\n                        type=\"number\"\r\n                        value={newBidAmount}\r\n                        onChange={(e) => setNewBidAmount(e.target.value)}\r\n                        InputProps={{ inputProps: { min: round.currentBid + 1 } }}\r\n                      />\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setSelectedAuctionRound(round._id);\r\n                          handleBidSubmit();\r\n                        }}\r\n                      >\r\n                        Place Bid\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default BidderDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}